import React from 'react';
import { useForm } from 'react-hook-form';
import './App.css';
import { content } from './static';
import { yupResolver } from '@hookform/resolvers/yup';
import * as yup from 'yup';

let schema = yup.object().shape({
  email: yup.string().required("please enter a correct email"),
  password: yup.string().required().min(5),
});

// // check validity
// schema
//   .isValid({
//     name: 'jimmy',
//     age: 24,
//   })
//   .then(function (valid) {
//     valid; // => true
//   });

function App() {
  const { register, handleSubmit, errors } = useForm({
    resolver: yupResolver(schema)
  });

  /**
   * function Submit : validate submission according to email/password
   * @param data 
   */
  const onSubmit = (data: any) => {
    console.log(`data`, data)
    console.log(`errors`, errors)
  }

  return (
    <div className="App">
      <h1>Title Formn</h1>
      <form onSubmit={handleSubmit(onSubmit)}>
        {content.inputs.map((input: any, key: number) => {
          return (
            <div key={key}>
              <p>
                <label className="label">{input.label}</label>
              </p>
              <p>
                <input
                  type={input.type}
                  name={input.name}
                  ref={register}
                  className="input"></input>
              </p>
              <p>{errors[input.name]?.message}</p>
            </div>
          )
        })}
      </form>
    </div>
  );
}

export default App;


///////////////////

import React from 'react';
import '../App.css';
import { useForm } from "react-hook-form";
// import { content } from '../static';

type Inputs = {
  email: string,
  password: string,
};

export default function Login() {
  const { register, handleSubmit, watch, formState: { errors } } = useForm<Inputs>();
  const onSubmit = (data: any) => console.log(data);
  const [showPwd, setShowPwd] = React.useState<boolean>(false)


  console.log(watch("email"))
  console.log(watch("password"))
  return (
    <div className="App">

      <form onSubmit={handleSubmit(onSubmit)}>
        <div>
          <p>
            <label htmlFor="email" className="label">Adresse email</label>
          </p>
          <p>
            <input {...register("email")} className="input" placeholder="enter an email" />
          </p>
          {errors.email && <span>please enter a valid email</span>}
        </div>

        <div>
          <p>
            <label htmlFor="password" className="label">Mot de passe</label>
          </p>
          <p>
            <input {...register("password", { required: true })} placeholder="•••••" />
          </p>


          <div>
            <input id="password" type={showPwd ? "text" : "password"} className="form-control" name="txtPassword" />
            <button type="button" id="btnToggle" className="toggle"><i id="eyeIcon" className="fa fa-eye" onClick={() => { setShowPwd(!showPwd); console.log(`showPwd`, showPwd) }}>eye</i></button>
          </div>


          {errors.password && <span>This field is required</span>}
        </div>

        <button type="submit">
          Submit
          </button>
      </form>
    </div >
  );
}